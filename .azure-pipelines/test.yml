
stages:
  - stage: build_natives
    displayName: Natives
    jobs:
    - job: build_win32_natives
      displayName: Win32
      pool:
        vmImage: 'vs2017-win2016'
      strategy:
        matrix:
          Debug:
            CMAKE_BUILD_TYPE: 'Debug'
          Release:
            CMAKE_BUILD_TYPE: 'Release'
      steps:
      - task: CMake@1
        inputs:
          cmakeArgs: '../native'
      - task: MSBuild@1
        inputs:
          solution: build/releng.sln
          configuration: $(CMAKE_BUILD_TYPE)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/DriftFX/$(CMAKE_BUILD_TYPE)/driftfx.dll
          ArtifactName: 'win32_$(CMAKE_BUILD_TYPE)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/DriftFX/$(CMAKE_BUILD_TYPE)/driftfx.lib
          ArtifactName: 'win32_$(CMAKE_BUILD_TYPE)'
      - task: PublishBuildArtifacts@1
        condition: eq(variables['CMAKE_BUILD_TYPE'], 'Debug')
        inputs:
          PathtoPublish: build/DriftFX/$(CMAKE_BUILD_TYPE)/driftfx.pdb
          ArtifactName: 'win32_$(CMAKE_BUILD_TYPE)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/samples/$(CMAKE_BUILD_TYPE)/samples.dll
          ArtifactName: 'win32_$(CMAKE_BUILD_TYPE)'
    - job: build_macos_natives
      displayName: MacOS
      pool:
        vmImage: 'macOS-10.14'
      strategy:
        matrix:
          Debug:
            CMAKE_BUILD_TYPE: 'Debug'
          Release:
            CMAKE_BUILD_TYPE: 'Release'
      steps:
      - bash: .azure-pipelines/build-unix.sh
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/DriftFX/libdriftfx.dylib
          ArtifactName: 'macos_$(CMAKE_BUILD_TYPE)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/samples/libsamples.dylib
          ArtifactName: 'macos_$(CMAKE_BUILD_TYPE)'
    - job: build_linux_natives
      displayName: Linux
      pool:
        vmImage: 'ubuntu-16.04'
      strategy:
        matrix:
          Debug:
            CMAKE_BUILD_TYPE: 'Debug'
          Release:
            CMAKE_BUILD_TYPE: 'Release'
      steps: 
      - bash: .azure-pipelines/build-unix.sh
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/DriftFX/libdriftfx.so
          ArtifactName: 'linux_$(CMAKE_BUILD_TYPE)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: build/samples/libsamples.so
          ArtifactName: 'linux_$(CMAKE_BUILD_TYPE)'
  - stage: build_java
    jobs:
    - job: build_java
      steps:
      - task: DownloadBuildArtifacts@0
        inputs:
         artifactName: 'linux_Debug'
         downloadPath: 'artifacts/linux/Debug/'
      - task: DownloadBuildArtifacts@0
        inputs:
         artifactName: 'linux_Release'
         downloadPath: 'artifacts/linux/Release/'
      - task: DownloadBuildArtifacts@0
        inputs:
         artifactName: 'win32_Debug'
         downloadPath: 'artifacts/win32/Debug/'
      - task: DownloadBuildArtifacts@0
        inputs:
         artifactName: 'win32_Release'
         downloadPath: 'artifacts/win32/Release/'
      - task: DownloadBuildArtifacts@0
        inputs:
         artifactName: 'macos_Debug'
         downloadPath: 'artifacts/macos/Debug/'
      - task: DownloadBuildArtifacts@0
        inputs:
         artifactName: 'macos_Release'
         downloadPath: 'artifacts/macos/Release/'
      - bash: mvn -version
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          options: '--batch-mode'
          goals: 'clean package'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          mavenVersionOption: 'Default'

